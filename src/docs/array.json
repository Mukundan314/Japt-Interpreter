{
	"type":"methods",
	"title":"Array Methods",
	"object":"A",
	"intro":[],
	"methods":{
		"a(s/n)":{
			"description":"Returns the last index of `s/n` in `A`, or `-1` if not found.",
			"returns":"N",
			"version":"1.4.5"
		},
		"a(f)":{
			"description":"Returns the index of the last element in `A` to return a truthy value when passed through `f`, or `-1` if none do.",
			"returns":"N",
			"version":"1.4.5"
		},
		"b(s/n)":{
			"description":"Returns the first index of `s/n` in `A`, or `-1` if not found.",
			"returns":"N",
			"version":"1.4.5"
		},
		"b(f)":{
			"description":"Returns the index of the first element in `A` to return a truthy value when passed through `f`, or `-1` if none do.",
			"returns":"N",
			"version":"1.4.5"
		},
		"c()":{
			"description":"Returns `A` flattened.",
			"returns":"A",
			"version":"1.4.5"
		},
		"c(n)":{
			"description":"Returns `A` flattened by `n` levels.",
			"returns":"A",
			"version":"1.4.6"
		},
		"c(f)":{
			"description":"Returns the result of passing each element in `A` through `f` and then flattening by 1 level.",
			"returns":"A",
			"version":"1.4.6"
		},
		"c(a)":{
			"description":"Returns the result of concatenating `a` to `A`.",
			"returns":"A",
			"version":"1.4.5"
		},
		"d(f?)":{
			"description":"Returns `true` if any element of `A` returns a truthy value when passed through `f`, or `false` if none do.",
			"returns":"B",
			"version":"1.4.5"
		},
		"e(f?)":{
			"description":"Returns `true` if every element of `A` returns a truthy value when passed through `f`, or `false` if any doesn't.",
			"returns":"B",
			"version":"1.4.5"
		},
		"e(a)":{
			"description":"Returns `true` if every element of `A` is exactly equal to the corresponding element of `a`, or `false` if any isn't. Supports multi-dimensional arrays as of [v:1.4.6].",
			"returns":"B",
			"version":"1.4.5"
		},
		"f(f?)":{
			"description":"Returns the elements of `A` that return a truthy value when passed through `f`.",
			"returns":"A",
			"version":"1.4.5"
		},
		"f(a,n=0)":{
			"description":"Returns the elements of `A` that are also contained in `a` if `n%3=0`; the unique elements that appear in both `A` and `a` if `n%3=1`; or the elements that appear in both `A` and `a` if `n%3=2`.",
			"returns":"A",
			"version":"1.4.5"
		},
		"g(n=0)":{
			"description":"Returns the element in `A` at index `n`.",
			"returns":"X",
			"version":"1.4.5"
		},
		"g(n,...,n)":{
			"description":"Returns the element in multi-dimensional `A` at index `n,...,n`.",
			"returns":"X",
			"version":"1.4.6"
		},
		"g(n,...,n?,f)":{
			"description":"Returns `A` after first passing the element at index `n,...,n` through `f`. Modifies the original `A`.",
			"returns":"A",
			"version":"1.4.6"
		},
		"g(a)":{
			"description":"Returns the elements in `A` at the indices in `a`.",
			"returns":"A",
			"version":"1.4.6"
		},
		"g(a,f)":{
			"description":"Returns `A` after first passing the elements at the indices in `a` through `f`. Modifies the original `A`.",
			"returns":"A",
			"version":"1.4.6"
		},
		"g(f)":{
			"description":"Returns the result of passing `A` through `f`.",
			"returns":"A",
			"version":"1.4.6"
		},
		"h(n=0,x)":{
			"description":"Returns `A` with the element at index `n` replaced with `x`. Modifies the original `A`. Arguments may be passed in any order unless `x` is an integer.",
			"returns":"A",
			"version":"1.4.5"
		},
		"i(n=0,x)":{
			"description":"Returns `A` with `x` inserted at index `n`. Modifies the original `A`. Arguments may be passed in any order unless `x` is an integer.",
			"returns":"A",
			"version":"1.4.5"
		},
		"j(n1=0,n2=1)":{
			"description":"Returns `n2` elements from `A` starting at index `n1`. Modifies the original `A` by removing those elements.",
			"returns":"A",
			"version":"1.4.5"
		},
		"k(f?)":{
			"description":"Returns the elements of `A` that return a falsey value when passed through `f`.",
			"returns":"A",
			"version":"1.4.5"
		},
		"k(a)":{
			"description":"Returns `A` with the elements in `a` removed.",
			"returns":"A",
			"version":"1.4.5"
		},
		"k(x)":{
			"description":"Returns `A` with `x` removed.",
			"returns":"A",
			"version":"1.4.5"
		},
		"l()":{
			"description":"Returns the length of `A`.",
			"returns":"N",
			"version":"1.4.5"
		},
		"l(f)":{
			"description":"Returns elements of `A` whose lengths return a truthy value when passed through `f`.",
			"returns":"A",
			"version":"1.4.6"
		},
		"l(n)":{
			"description":"Returns elements of `A` of length `n`.",
			"returns":"A",
			"version":"1.4.6"
		},
		"m(f)":{
			"description":"Returns the result of passing each element in `A` through `f`.",
			"returns":"A",
			"version":"1.4.5"
		},
		"n(f?)":{
			"description":"Returns `A` sorted by passing each pair of elements `x,y` through `f`. Sorts `x` to the left if `f` returns a value `<0` or `y` to the left if `>0`. Modifies the original `A`.",
			"returns":"A",
			"version":"1.4.5"
		},
		"o(n=1)":{
			"description":"Returns the last `n` elements of `A`. If `n=1` then the element itself is returned. Modifies the original `A` by removing those elements.",
			"returns":"A/X",
			"version":"1.4.5"
		},
		"o(f)":{
			"description":"Returns the result of passing the last element in `A` through `f`. Modifies the original `A`.",
			"returns":"A",
			"version":"1.4.6"
		},
		"p(x,...,x)":{
			"description":"Returns the result of appending each `x` to `A`. Modifies the original `A`.",
			"returns":"A",
			"version":"1.4.5"
		},
		"q(x=\"\")":{
			"description":"Returns `A` joined with `x`.",
			"returns":"S",
			"version":"1.4.5"
		},
		"r(f,x=A[0])":{
			"description":"Returns the result of reducing `A` by `f` with an initial value of `x`.",
			"returns":"X",
			"version":"1.4.5"
		},
		"s(n1=0,n2=A.length)":{
			"description":"Returns the result of slicing `A` from index `n1` to `n2`.",
			"returns":"A",
			"version":"1.4.5"
		},
		"t(n1=0,n2=A.length)":{
			"description":"Returns `n2` elements from `A` starting at index `n1`.",
			"returns":"A",
			"version":"1.4.5"
		},
		"u(x,...,x)":{
			"description":"Returns the result of prepending each `x` to `A`. Modifies the original `A`.",
			"returns":"A",
			"version":"1.4.5"
		},
		"v()":{
			"description":"Returns the first element of `A`. Modifies the original `A` by removing that element.",
			"returns":"X",
			"version":"1.4.5"
		},
		"v(n=1)":{
			"description":"Returns the first `n` elements of `A`. Modifies the original `A` by removing those elements.",
			"returns":"A",
			"version":"1.4.6"
		},
		"v(f)":{
			"description":"Returns the result of passing the first element in `A` through `f`. Modifies the original `A`.",
			"returns":"A",
			"version":"1.4.6"
		},
		"w()":{
			"description":"Returns `A` reversed. Modifies the original `A`.",
			"returns":"A",
			"version":"1.4.5"
		},
		"x(f?)":{
			"description":"Returns the result of reducing `A` by addition after first passing each element through `f`.",
			"returns":"N",
			"version":"1.4.5"
		},
		"y()":{
			"description":"Returns the transposing rows and columns of each element.",
			"returns":"A",
			"version":"1.4.5"
		},
		"y(f)":{
			"description":"Returns the result of passing each column in `A` through `f`.",
			"returns":"A",
			"version":"1.4.5"
		},
		"z(n=1)":{
			"description":"Returns the result of rotating `A` clockwise by `n*90` degrees.",
			"returns":"A",
			"version":"1.4.5"
		},
		"à(n?)":{
			"description":"Returns all combinations of `A`. If `n` is passed, returns all combinations of length `n`.",
			"returns":"A",
			"version":"1.4.5"
		},
		"á(n?)":{
			"description":"Returns all unique permutations of `A`. If `n` is passed, returns all permutations of length `n`.",
			"returns":"A",
			"version":"1.4.5"
		},
		"â(x?)":{
			"description":"Returns the unique elements of `A` in the order they first appear. If `x` is passed then it is concatenated to A first.",
			"returns":"A",
			"version":"1.4.5"
		},
		"ã(n?,s/a?)":{
			"description":"Returns all subsections of `A`. If `n` is passed, returns all subsections of length `n`. Prior to [v:1.4.6] `n` defaults to `2`. If `s/a` is also passed then it is first prepended to the array.",
			"returns":"A",
			"version":"1.4.5"
		},
		"ã(f)":{
			"description":"Returns all subssections of `A` after passing each through `f`.",
			"returns":"A",
			"version":"1.4.6"
		},
		"ä(f,s/a?)":{
			"description":"Returns the result of passing each consecutive pair of elements `x,y` in `A` through `f` with arguments `(x,y,x+y)`. If `s/a` is passed then it is first prepended to the array.",
			"returns":"A",
			"version":"1.4.5"
		},
		"å(f,x=A[0])":{
			"description":"Returns the result of cumulatively reducing `A` by `f` with an initial value of `x`.",
			"returns":"A",
			"version":"1.4.5"
		},
		"æ(f?)":{
			"description":"Returns the first element of `A` to return a truthy value when passed through `f`.",
			"returns":"X",
			"version":"1.4.5"
		},
		"ç(x)":{
			"description":"Returns `A` with each element replaced with `x`.",
			"returns":"A",
			"version":"1.4.5"
		},
		"è(f)":{
			"description":"Returns the number of elements in `A` that return a truthy value when passed through `f`.",
			"returns":"N",
			"version":"1.4.5"
		},
		"é(n=1)":{
			"description":"Returns the result of rotating `A` right by `n` elements.",
			"returns":"A",
			"version":"1.4.5"
		},
		"ê(n=0)":{
			"description":"Returns `A` palindromised if `n%2=0`, or the reverse of `A` concatenated to `A`.",
			"returns":"A",
			"version":"1.4.5"
		},
		"ê(s)":{
			"description":"Returns `true` if `A` is a palindrome, or `false` if it isn't",
			"returns":"B",
			"version":"1.4.5"
		},
		"ë(n1=2,n2=0)":{
			"description":"Returns every `n1`th element of `A` starting from index `n2`.",
			"returns":"A",
			"version":"1.4.5"
		},
		"ì(n/s/a)":{
			"description":"Returns the result of converting `A` from an array of base-`n/s/a` digits to a base-`10` integer. (e.g., `[\"b\",\"a\",\"a\",\"b\"].n(\"ab\")` = `[1,0,0,1].ì(2)` = `9`)",
			"returns":"N",
			"version":"1.4.5"
		},
		"ì(x,x)":{
			"description":"Returns the result of converting `A` from an array of base-`x1` digits to an array of base-`x2` digits.",
			"returns":"A",
			"version":"2.0a0"
		},
		"ì(x=10,x?,f)":{
			"description":"Returns the result of converting `S` from an array of base-`x1` digits to a base-`10` integer, passing it through `f` and then converting it to an array of base-`x2` digits. If `x2` is not passed then the result will be converted back to the original base.",
			"returns":"A",
			"version":"1.4.6"
		},
		"í(a?,f?)":{
			"description":"Returns the result of pairing each element in `A` with the corresponding element in `a`. If `a` is not passed then the indices of the elements in `A` are used instead. If `f` is passed then each pair of elements is reduced by passing it through `f`.",
			"returns":"A",
			"version":"1.4.5"
		},
		"î(a/s=[0])":{
			"description":"Returns `a/s` repeated and sliced to the length of `A`.",
			"returns":"A",
			"version":"1.4.5"
		},
		"ï(a=A,f?)":{
			"description":"Returns the result of pairing each element in `A` with each element in `a` and reducing each pair by `f`. If `f` is passed then each pair of elements is reduced by passing it through `f`.",
			"returns":"A",
			"version":"1.4.5"
		},
		"ð(f?)":{
			"description":"Returns the indices of the elements in `A` that return a truthy value when passed through `f`.",
			"returns":"A",
			"version":"1.4.6"
		},
		"ñ(f?)":{
			"description":"Returns the elements of `A` sorted as though they had been passed through `f`.",
			"returns":"A",
			"version":"1.4.5"
		},
		"ò(n=2)":{
			"description":"Returns `A` partitioned into arrays of length `n`. If `n` is negative then partitions from the end of `A`",
			"returns":"A",
			"version":"1.4.5"
		},
		"ò(f)":{
			"description":"Returns `A` partitioned between each pair of elements that return a truthy value when passed through `f`.",
			"returns":"A",
			"version":"1.4.5"
		},
		"ó(n=2)":{
			"description":"Returns `A` partitioned into `n` arrays each containing every `n`th element of `A`.",
			"returns":"A",
			"version":"1.4.5"
		},
		"ó(f)":{
			"description":"Returns `A` partitioned between each pair of elements that return a falsey value when passed through `f`.",
			"returns":"A",
			"version":"1.4.5"
		},
		"ô()":{
			"description":"Returns `A` partitioned at each falsey element.",
			"returns":"A",
			"version":"1.4.5"
		},
		"ô(f)":{
			"description":"Returns `A` partitioned at each element that returns a truthy value when passed through `f`.",
			"returns":"A",
			"version":"1.4.5"
		},
		"ö(n=1)":{
			"description":"Returns `n` random elements from `A` with `n` rounded up to the nearest whole number, if necessary. If `n=1` then the element itself is returned.",
			"returns":"A/X",
			"version":"1.4.5"
		},
		"ö(s)":{
			"description":"Returns a random permutation of `A`.",
			"returns":"A",
			"version":"1.4.5"
		},
		"ö(f)":{
			"description":"Returns a random element of `A` that returns a truthy value when passed through `f`.",
			"returns":"X",
			"version":"1.4.5"
		},
		"ø(a)":{
			"description":"Returns `true` if `A` contains any element of `a`, or `false` if it doesn't.",
			"returns":"B",
			"version":"1.4.5"
		},
		"ø(x)":{
			"description":"Returns `true` if `A` contains `x`, or `false` if it doesn't.",
			"returns":"B",
			"version":"1.4.5"
		},
		"ù(s=\" \",n?)":{
			"description":"Returns the result of left-padding each element in `A` with `s` to length `n`. If `n` is not passed then the length of the longest element is used.",
			"returns":"A",
			"version":"1.4.5"
		},
		"ú(s=\" \",n?)":{
			"description":"Returns the result of right-padding each element in `A` with `s` to length `n`. If `n` is not passed then the length of the longest element is used.",
			"returns":"A",
			"version":"1.4.5"
		},
		"û(s=\" \",n?)":{
			"description":"Returns the result of centre-padding each element in `A` with `s` to length `n`. If `n` is not passed then the length of the longest element is used.",
			"returns":"A",
			"version":"1.4.5"
		},
		"ü(f?)":{
			"description":"Returns the elements of `A` sorted and grouped by the values returned by passing each through `f`.",
			"returns":"A",
			"version":"1.4.6"
		}
	}
}